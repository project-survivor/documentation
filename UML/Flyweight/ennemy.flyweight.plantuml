@startuml
title Enemy Flyweight Pattern

interface IEnemy {
    +attack(): void
    +clone(): IEnemy
}


class EnemyType {
    - name: String
    - speed: int
    - health: int
    - damage: int
    - sprite: String
    + EnemyType(name: String, speed: int, health: int, damage: int, sprite: String)
    + attack(): void
}

class EnemyFlyweightFactory {
    - enemyTypes: EnemyType[]
    + getEnemyType(name: String, speed: int, health: int, damage: int, sprite: String): EnemyType
}

class GameWorld {
    - enemies: IEnemy[]
    + addEnemy(x: int, y: int, name: String, speed: int, health: int, damage: int, sprite: String): void
    + render(): void
}


class Zombie implements IEnemy {
    -x: int
    -y: int
    -type: EnemyType
    -enemyBehavior: EnemyBehavior
    +abstract attack(): void
    +clone(): IEnemy
}

class Vampire implements IEnemy {
    -x: int
    -y: int
    -type: EnemyType
    -enemyBehavior: EnemyBehavior
    +abstract attack(): void
    +clone(): IEnemy
}

class Werewolf implements IEnemy {
    -x: int
    -y: int
    -type: EnemyType
    -enemyBehavior: EnemyBehavior
    +abstract attack(): void
    +clone(): IEnemy
}


EnemyFlyweightFactory o--> EnemyType
GameWorld o--> IEnemy
GameWorld --> EnemyFlyweightFactory
Zombie --> EnemyType
Werewolf --> EnemyType
Vampire --> EnemyType

@enduml