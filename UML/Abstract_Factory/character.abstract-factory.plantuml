@startuml
title Abstract Factory - Character Creation

interface IHunter {
    + void attack()
}

interface IMage {
    + void castSpell()
}

interface IFighter {
    + void fight()
}

class OrcHunter implements IHunter {
    + void attack()
}

class HumanHunter implements IHunter {
    + void attack()
}

class ElfHunter implements IHunter {
    + void attack()
}

class OrcMage implements IMage {
    + void castSpell()
}

class HumanMage implements IMage {
    + void castSpell()
}

class ElfMage implements IMage {
    + void castSpell()
}

class OrcFighter implements IFighter {
    + void fight()
}

class HumanFighter implements IFighter {
    + void fight()
}

class ElfFighter implements IFighter {
    + void fight()
}

interface ICharacterFactory {
    + IHunter createHunter()
    + IMage createMage()
    + IFighter createFighter()
}

class OrcFactory implements ICharacterFactory {
    + IHunter createHunter()
    + IMage createMage()
    + IFighter createFighter()
}

class HumanFactory implements ICharacterFactory {
    + IHunter createHunter()
    + IMage createMage()
    + IFighter createFighter()
}

class ElfFactory implements ICharacterFactory {
    + IHunter createHunter()
    + IMage createMage()
    + IFighter createFighter()
}


OrcFactory ..> OrcHunter
OrcFactory ..> OrcMage
OrcFactory ..> OrcFighter

HumanFactory ..> HumanHunter
HumanFactory ..> HumanMage
HumanFactory ..> HumanFighter

ElfFactory ..> ElfHunter
ElfFactory ..> ElfMage
ElfFactory ..> ElfFighter


@enduml
