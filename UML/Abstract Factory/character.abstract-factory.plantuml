@startuml
title Abstract Factory - Character Creation

interface IClass {
 -baseWeapon: IWeapon
 -equipment: IEquipment
 + action() : void
}

class Fighter implements IClass {
  -baseWeapon: IWeapon
  -equipment: IEquipment
  + action() : void
}

class Mage implements IClass {
  -baseWeapon: IWeapon
  -equipment: IEquipment
  + action() : void
}

class Hunter implements IClass{
  -baseWeapon: IWeapon
  -equipment: IEquipment
  + action() : void
}

interface IRace {
 + characteristic() : void
}

class Human implements IRace {
  + characteristic() : void
}

class Elf implements IRace {
  + characteristic() : void
}

class Orc implements IRace {
  + characteristic() : void
}

interface ICharacterFactory {
  + createClass() : IClass
  + createRace() : IRace
}

class HumanMageFactory   {
  + createClass() : IClass
  + createRace() : IRace
}

class HumanFighterFactory   {
  + createClass() : IClass
  + createRace() : IRace
}

class HumanHunterFactory   {
  + createClass() : IClass
  + createRace() : IRace
}

class ElfMageFactory   {
  + createClass() : IClass
  + createRace() : IRace
}

class ElfFighterFactory   {
  + createClass() : IClass
  + createRace() : IRace
}

class ElfHunterFactory   {
  + createClass() : IClass
  + createRace() : IRace
}

class OrcMageFactory   {
  + createClass() : IClass
  + createRace() : IRace
}

class OrcFighterFactory   {
  + createClass() : IClass
  + createRace() : IRace
}

class OrcHunterFactory   {
  + createClass() : IClass
  + createRace() : IRace
}

ICharacterFactory <|.up. HumanMageFactory
ICharacterFactory <|.up. HumanFighterFactory
ICharacterFactory <|.up. HumanHunterFactory
ICharacterFactory <|.up. ElfMageFactory
ICharacterFactory <|.up. ElfFighterFactory
ICharacterFactory <|.down. ElfHunterFactory
ICharacterFactory <|.down. OrcMageFactory
ICharacterFactory <|.down. OrcFighterFactory
ICharacterFactory <|.down. OrcHunterFactory


ICharacterFactory .-left-.> IRace 
ICharacterFactory .-right-.> IClass

@enduml
