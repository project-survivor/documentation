@startuml

title Spell Decorator Pattern

!ifndef DIAGRAM
!define DIAGRAM

interface ISpell {
    +name
    +damage
    +cast()
    +render()  
}

class MageSpell implements ISpell {
    +name
    +damage
    +cast()
    +render()  
}

class HunterSpell implements ISpell {
    +name
    +damage
    +cast()
    +render() 
}

class FighterSpell implements ISpell {
    +name
    +damage
    +cast()
    +render()  
}

abstract class SpellDecorator implements ISpell {
    -spell: ISpell
    +SpellDecorator(spell: ISpell)
    +cast()
    +render()  
}

class FireSpellDecorator {
    +FireSpellDecorator(spell: ISpell)
    +cast()
    +render() 
}

class WaterSpellDecorator {
    +WaterSpellDecorator(spell: ISpell)
    +cast()
    +render() 
}

class GroundSpellDecorator {
    +GroundSpellDecorator(spell: ISpell)
    +cast()
    +render() 
}

class AirSpellDecorator {
    +AirSpellDecorator(spell: ISpell)
    +cast()
    +render() 
}

ISpell <--o SpellDecorator

SpellDecorator <|-- FireSpellDecorator
SpellDecorator <|-- WaterSpellDecorator
SpellDecorator <|-- GroundSpellDecorator
SpellDecorator <|-- AirSpellDecorator

!endif

@enduml
