@startuml

interface Command {
    + execute()
}

class AttackCommand implements Command {
    - character: ICharacter
    - params: Params
    + AttackCommand(params Params)
    + execute()
}

class MoveCommand implements Command {
    - character: ICharacter
    - param: Param
    + MoveCommand(params Params)
    + execute()
}

class UseItemCommand implements Command {
    - character: ICharacter
    - param: Param
    + UseItemCommand(params Params)
    + execute()
}

class Invoker {
    - command: Command
    + setCommand(command: Command)
    + executeCommand()
}

class CommandHistory {
    - history: Command[]
    + push(c: Command)
    + pop(c: Command)
}

Invoker o-- Command
Invoker --> CommandHistory
CommandHistory *--> Command

AttackCommand o--> ICharacter
MoveCommand o--> ICharacter
UseItemCommand o--> ICharacter

interface ICharacter {
    + attack(damage: int, target: IEnemy)
    + move(speed: int, direction: Direction)
    + useItem(item: Item)
}

@enduml
